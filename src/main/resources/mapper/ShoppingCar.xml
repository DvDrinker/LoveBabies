<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanou.dao.ShoppingCarMapper">

	<resultMap type="ShoppingCar" id="ShoppingCarResult">
		<id column="shoppingCarId" property="shoppingCarId" javaType="Integer" />
		<result column="goodsCount" property="goodsCount" jdbcType="INTEGER" />
		<result column="totalPrice" property="totalPrice" jdbcType="DOUBLE" />
		<result column="deleteId" property="deleteId" jdbcType="INTEGER" />
		<association property="goods" javaType="Goods" >
			<id column="goodsId" property="goodsId" javaType="Integer" />
			<result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
			<result column="goodsInventory" property="goodsInventory" jdbcType="INTEGER" />
			<result column="goodsMemberPrice" property="goodsMemberPrice" jdbcType="DOUBLE" />
			<result column="img1" property="img1" jdbcType="VARCHAR" />
		</association>
		<association property="user" javaType="User" >
			<id column="userId" property="userId" javaType="Integer" />
		</association>
	</resultMap>

	<select id="findShoppingCar" resultMap="ShoppingCarResult">
		select * from shoppingCar s,goods g,user u where s.user_Id=#{userId} and s.goods_Id=g.goodsId and s.user_Id=u.userId and s.deleteId=0
	</select>

	<select id="findShoppingCarByUserIdAndGoodsId" resultMap="ShoppingCarResult">
		select * from shoppingCar s,goods g,user u where s.user_Id=#{userId} and s.goods_Id=#{goodsId} and s.goods_Id=g.goodsId and s.user_Id=u.userId and s.deleteId=0
	</select>

	<update id="updateGoodsCount">
		update shoppingCar s set goodsCount=#{goodsCount} where s.user_Id=#{userId} and s.goods_Id=#{goodsId} and s.deleteId=0
	</update>

	<insert id="insertShoppingCar">
		INSERT INTO shoppingCar(goods_Id,user_Id,goodsCount) VALUES (#{goodsId},#{userId},#{goodsCount})
	</insert>

	<update id="deleteRecord">
		update shoppingCar s set s.deleteId=1 where s.shoppingCarId IN
		<foreach collection="shoppingCarIdList" item="shoppingCarId" index="index" separator="," open="(" close=")">
			#{shoppingCarId}
		</foreach>
	</update>

</mapper>
